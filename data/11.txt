Visual Exploration of Sparse Trafﬁc Trajectory DataZuchao Wang, Tangzhi Ye, Min Lu, Xiaoru Yuan, Member, IEEE, Huamin Qu, Member, IEEE, Jacky Yuan and Qianliang WuFig. 1. Our sparse trafﬁc trajectory dataset spans half a year. As shown by the line chart below, the daily trafﬁc ﬂow is rather stable, except during the spring festival. In a snowing morning, the transportation cells are redder, indicating high trafﬁc load. In a spring festival morning, the transportation cells are greener, indicating low trafﬁc load.Abstract—In this paper, we present a visual analysis system to explore sparse trafﬁc trajectory data recorded by transportation cells. Such data contains the movements of nearly all moving vehicles on the major roads of a city. Therefore it is very suitable for macro- trafﬁc analysis. However, the vehicle movements are recorded only when they pass through the cells. The exact tracks between two consecutive cells are unknown. To deal with such uncertainties, we ﬁrst design a local animation, showing the vehicle movements only in the vicinity of cells. Besides, we ignore the micro-behaviors of individual vehicles, and focus on the macro-trafﬁc patterns. We apply existing trajectory aggregation techniques to the dataset, studying cell status pattern and inter-cell ﬂow pattern. Beyond that, we propose to study the correlation between these two patterns with dynamic graph visualization techniques. It allows us to check how trafﬁc congestion on one cell is correlated with trafﬁc ﬂows on neighbouring links, and with route selection in its neighbourhood. Case studies show the effectiveness of our system.Index Terms—Sparse Trafﬁc Trajectory, Trafﬁc Visualization, Dynamic Graph Visualization, Trafﬁc Congestion		
1 INTRODUCTIONTransportation visualizations have been studied for many years. Re- searchers have designed methods to study various kinds of transporta- tion data, including radar based vehicle counting data, taxi GPS data, subway IC card data, etc. Such visualizations help us gain insight into the complex transportation system.In this paper, we focus on a new type of transportation data: sparse• Zuchao Wang is with Peking University. E-mail: zuchao.wang@pku.edu.cn.• Tangzhi Ye is with Peking University. E-mail: yetangzhi@sjtu.edu.cn.• Min Lu is with Peking University. E-mail: lumin.vis@gmail.com.• Xiaoru Yuan is with Peking University. E-mail: xiaoru.yuan@pku.edu.cn.• Huamin Qu is with Hong Kong University of Science and Technology. E-mail: huamin@cse.ust.hk.• Jacky Yuan is with Nanjing Intelligent Transportation Systems Co., Ltd. E-mail: zipmagic@sina.com.• Qianliang Wu is with Nanjing Intelligent Transportation Systems Co., Ltd. E-mail: wuqianliang@gmail.com.Manuscript received 31 Mar. 2014; accepted 1 Aug. 2014. Date ofpublication 11 Aug. 2014; date of current version 9 Nov. 2014. For information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org.Digital Object Identiﬁer 10.1109/TVCG.2014.2346746
trafﬁc trajectory data. Unlike traditional GPS data, our data encom- passes the movements of nearly all vehicles in a city, not just taxis or buses. Therefore, it can provide accurate trafﬁc statistics, such as ﬂow volume on each cell and between each Origin-Destination (OD). These statistics are very precious in transportation modeling. How- ever, our data is not recorded continuously as in GPS data. Rather, the data is recorded only when vehicles pass through transportation cells. Therefore, it is spatially sparse, and usually temporally sparse as well. The above differences make our data unique.  To analyse such data, our major challenge is to deal with the uncer- tainties caused by the sparsity. For example, the exact tracks on the links between two consecutive cells are unknown. The exact start and end locations of a trajectory are also unknown. Nevertheless, we con- sider movements in the vicinity of cells as of high certainty. Therefore, our ﬁrst technique is to generate a local animation, which only shows movements near the cells. Following Andrienko et al.’s work [9], the second technique is to aggregate many trajectories, in order to com- pensate for the uncertainties in spatial and temporal coverage. In this way, we are able to study the cell status patterns (e.g. average speed pattern, congestion pattern) and inter-cell ﬂow patterns.  Beyond studying these patterns separately, we propose to study their correlations. That corresponds to interesting domain questions such as how trafﬁc congestion on one cell is correlated with trafﬁc
1077-2626 © 2014 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

ﬂows on neighbouring links, and with route selection in its neighbour- hood. To study the correlations, we view the aggregated trajectory data as a dynamic graph, and apply dynamic graph visualization tech- niques.The contributions of this work are:• We present a visual analysis system to explore sparse trafﬁc tra- jectory data, addressing the uncertainties with local animation and trajectory aggregation techniques.• We study the correlation between cell pattern and link/route ﬂow pattern with dynamic graph visualization techniques.  We will ﬁrst review related work in Section 2. After that, we give an overview of our system in Section 3, followed by preprocessing in Section 4 and interface design in Section 5. Then we show the effectiveness of our system with case studies in Section 6. We discuss its potentials and limitations in Section 7, and conclude in Section 8.2 RELATED  WORKOur work is most related to trafﬁc visualization, trajectory visualiza- tion and dynamic graph visualization. Besides, some analytic methods can be applied to our dataset.2.1 Trafﬁc VisualizationThere are three major types of trafﬁc data: event based, location based and movement based. Event based trafﬁc data are usually log data collected manually. Each event usually has position, time and a set of attributes. Location based trafﬁc data are collected by roadside detectors, including inductive loops, video cameras, etc. Such data are mainly used for trafﬁc monitoring at predeﬁned locations. For each location, it records a few statistical quantities, e.g. ﬂow volume, occupancy or speed. Movement based trafﬁc data are either directly collected from GPS devices, or reconstructed from images, videos or point clouds. It records the trajectories of a set of vehicles.  In this paper, we focus on sparse trafﬁc trajectory data. It is a com- bination of location based and movement based trafﬁc data, because it records the movement of vehicles only at predeﬁned locations. No such trafﬁc data has been studied in the visualization community.  For location based trafﬁc data, Lu et al’s HOMES [29] enables peo- ple to visually summarize inductive loop data in a city at different levels. Piringer et al.’s AlVis [33] dealt with video camera data within a tunnel. It is especially designed to enable situational awareness dur- ing emergency events. In above cases, trafﬁc status are visualized in a stand-alone window. Alternatively, it can be embedded into the map as glyphs [27, 42, 38] for better situational awareness.  Now more and more visualizations are for movement based trafﬁc data. Various trajectory visualization techniques have been applied. At the local scale, Guo et al. designed TripVista [21] to study micro- trafﬁc patterns at a road intersection. Zeng et al. designed interchange Circos [45] to study interchange pattern at subway stations. At the global scale, Liu et al. designed VAIT [27] to monitor city trafﬁc. Ferreira et al. [20] and Chu et al. [17] studied city taxi datasets.  With our sparse trafﬁc trajectory data, we would mainly explore the congestion patterns at each cell, and ﬂow patterns at each link and route. Congestion pattern has been studied by Andrienko et al. [5]. They extracted trafﬁc congestions from trajectory data, and visualized them in map and space time cube. Further, Wang et al. [42] studied the propagation of trafﬁc congestions along the road network. Link pattern has been studied by Andrienko et al. [7]. They partitioned a city into regions and studied the trafﬁc ﬂows on the links between neighbouring regions. Route pattern has been studied by Liu et al. [26]. They studied the route diversity in a city at different levels. At the bottom level, they can compare different routes sharing the same origin and destination in terms of ﬂow volume and attributes. Although each pattern has been studied, there’s no work studying the correlations between these patterns. Correlation study is one focus of our paper.2.2 
Trajectory VisualizationTrajectory is a widely studied data type in visualization community. In the last two decades, many visual analysis techniques have been devel- oped [3]. According to Andrienko et al.’s paper [4], these techniques can be categorized into three major types: direct depiction, summa- rization and pattern extraction. All three types of techniques can be applied to sparse trajectories.  With direct depiction techniques, trajectories are visualized in a di- rect way. That includes representing trajectories as an animation of moving objects [31], representing paths as polylines [30] or stacked bands [40], showing temporal information on a timeline [40, 39], and showing spatial and temporal information together with space time cube [22]. While applying direct depiction techniques to sparse tra- jectories, we need to address the uncertainties in trajectory reconstruc- tion. For example, the exact tracks between two cells are virtually unknown, therefore visualizing sparse trajectories with animation and path polylines assuming linear movement with constant speed can be problematic. To address such issue, Stoll et al. [37] visualized the reconstruction uncertainties as colored band on top of animation and path polylines.  With summarization techniques, statistical calculations are per- formed on trajectory data. After that, these statistical summaries in- stead of the trajectories themselves are visualized. Trajectories can be summarized in many ways. Density map [43], spatial temporal aggre- gation [2, 7] and aggregated multivariate glyphs [35] summarize tra- jectories by location, time and attribute. Flow map and ﬂow matrix [2], OD map [44] and Flowstrates [13] summarize trajectories by origin and destination. Various clustering algorithms [6, 19] summarize tra- jectories by routes. Andrienko et al. [9] argues that summarization techniques are suitable for sparse trajectories, because they reduce the uncertainties in spatial and temporal coverage. Bak et al.’s [11] also studied the aggregated patterns of sparse trajectories. In our paper, we applied summarization techniques. However, we not only study the aggregated patterns separately, but also their correlations.  With pattern extraction techniques, hidden patterns are extracted from trajectory data. After that, these patterns are visualized instead of the trajectories themselves. Typical patterns studied in visualization community include events [5], moving interactions [8] and movement semantics [25, 17]. We consider pattern extraction techniques suitable for sparse trajectories, but we do not study them in this paper.2.3 Dynamic Graph VisualizationExisting spatial temporal aggregation techniques [2] can transform our sparse trafﬁc trajectory data into ﬂow map. This ﬂow map can be con- sidered as a dynamic graph, with cells as nodes, and inter-cell links as edges. Burch et al. [14] have already tested dynamic graph visualiza- tions on eye tracking trajectories. Therefore, it is natural to also test it on sparse trafﬁc trajectory data.  In their survey, Beck et al. [12] categorized existing dynamic graph visualization techniques into animation based techniques and time line based techniques. Animation based techniques visualize data as an an- imation of node-link diagrams [18]. They generally emphasize topo- logical features and are more intuitive. In our paper, we would use animation to give an overview of city trafﬁc, highlighting the back- bone of the inter-cell links.  Time line based techniques map time to space, usually showing multiple node-link diagrams [15] or matrices [10] simultaneously. Some techniques integrate node-link diagram and time line in a much closer manner. For example, Massive sequence view [41] shows the existential dynamics of edges, while Flowstrate [13] shows the at- tribute dynamics of edges. Time series glyphs can be associated to each node [34], showing attribute dynamics of nodes. Shi et al. [36] combined time series glyph and node duplication, transforming dy- namic route selections in a network into a tree style representation. Time line based techniques generally focus on temporal features and are more suitable for analysis. In our paper, we would use time line to analyze the dynamics of trafﬁc status at each cell, and the dynamics of ﬂow volumes on its related links and routes.

  Ahn et al. [1] proposed a taxonomy for dynamic graph analysis tasks. They distinguished between low-level tasks and compound tasks. While low-level tasks are mostly addressed by existing works, compound tasks are not explicitly studied. Two most typical com- pound tasks are inferential task and comparative/correlational task. In our system, we would explicitly support two correlational tasks, which answer interesting domain questions.2.4 AnalyticsMany analytic methods are related to our work. In the trajectory min- ing community, researchers often down-sample vehicle trajectories to road or region resolution, aggregate them, and then study their gen- eral patterns or extract the outliers. For example, Pang et al. [32] counted the number of taxis in each region of the city at regular time intervals. Then they detected spatial temporal outliers based on these counts. Liu et al. [28] further structured the outlier events into out- lier trees, therefore showing interactions between outliers in neigh- boring regions. In a later work [16], they used L1 optimization to infer the anomalous routes that cause these outlier events. Although above methods were originally designed for continuous GPS trajecto- ries, skipping the down-sample step, they can be potentially useful to analyse our sparse trafﬁc trajectory data. More trajectory computation methods are summarized in Zheng’s book [46]. On the other hand, if we ﬁrst aggregate the trajectories and view it as a dynamic graph, we can apply network analysis methods. Many of such methods are sum- marized in Kolaczyk et al’s book [24]. These methods can be tested on our data. In this paper, we focus on visualization. Therefore we have not implemented these analytic methods, except for the minDis- tort algorithm [28] for abnormality calculation in each cell. However, we consider them complementary to our work, and would implement them if necessary.3 OVERVIEWIn this section, we ﬁrst describe the data we use. After that, we explain our design considerations and present the pipeline of our system.3.1 Data DescriptionIn the past few years, government in the city of Nanjing, China has been pushing a project on intelligent transportation system.  In this
Fig. 2. Locations of all transportation cells in Nanjing. Each circle rep- resents one cell, with its area being proportional to ﬂow volume on Dec. 1st, 2012. A picture of the busiest cell is shown in the inset.These cells may be obsolete, malfunctioned or under construction. As Figure 3(b) shows, the mean speed in this day is around 30 km/h. We can see that the main body of the speed distribution seems to obey a Gaussian distribution. Besides, there are two outlier peaks at 0 km/h and 10 km/h. This distribution also has a long tail, with maximum speed being 500 km/h.

side for trafﬁc monitoring. The cells are usually installed at approx. 200 meters downstream a road intersection. Each cell is directed, meaning it is responsible for only one-direction of trafﬁc ﬂow. The cells have video cameras mounted in order to record vehicles passing through.  Our  dataset  contains  two  parts:  trajectory   data   and   cell data. The trajectory  data  are  derived  from  the  video  cam- eras, in which vehicles are extracted from video streams, and identiﬁed  via  license  plate  recognition  techniques.     Basically, it contains a list of  vehicle  passing  records,  each  correspond- ing  to  one  vehicle  passing  through  one  cell.    The  data  formatis (plate number, plate color, cell id, lane id, speed,timestamp).  Avehicle can be uniquely identiﬁed with its plate number  plus plate color. For the cell data, it contains the names, spatial positions and directions of the transportation cells.
1008060402007e+S6e+S Se+S 4e+S3e+S2e+S1e+S0
Number of cell records (bin size = 1000)(a)Vehicle Speed Distribution for All Records
  Our trajectory data spans 169 consecutive days, from Sep.  22nd2012 to Mar. 9th 2013. The daily record number is shown in the line chart of Figure 1. All together there are 870 million records, with over 1 million vehicles. The data size is 39 GB. Besides, in the cell data, 472 cells are recorded.  Before visual design, we have made some preliminary analysis on the trajectory data of one day. We chose Dec 1.st, 2012. This was a Saturday, which contains 5,177,062 records. Figure 2 plots the posi- tions of the cells. For each cell, we calculate its trafﬁc ﬂow volume as the number of records in trajectory data. This is mapped to the circle size on the map. A picture of the busiest cell is shown in the inset of this ﬁgure. As Figure 3(a) illustrates, on this day, one cell can have 0 to 100,000 records, with the average number being 14,000. There are 108 cells with less than 1000 records, 98 of which have 0 record.
0	20	40	60	80	100	120Vehcile speed (bin size = 1 km/h)(b)Fig. 3. Statistics of all cells in Nanjing, on Dec. 1st, 2012. (a) The distribution of record number in each cell. (b) The distribution of vehicle speeds in all cells.  We further focus on that busiest cell. Figure 4(a) shows its trafﬁc ﬂow in this day. We can see that the ﬂow volume reached a high level at 8 am, and kept high until 4 pm. The maximum trafﬁc ﬂow per 10 minutes is 1174, at 9:50 am. From Figure 4(b), we can see the trafﬁc speed began to drop at 7 am, and began to recover at 6 pm. At noon, there’s a small increase of trafﬁc speed, but it dropped back quickly.

10008006004002000
One Cell Traffic Flow  
In conclusion, compared with traditional GPS data and OD data, our sparse trafﬁc trajectory data can give much more accurate trafﬁc statistics, and therefore is the ideal data for network analysis. How- ever, we have to consider the uncertainties.  Regarding the uncertainties, we make use of two techniques. The ﬁrst technique is local animation. We believe showing an intuitive an- imation of vehicle movements is important in data exploration. How-
00:00	03:00	06:00	09:00	12:00	15:00	18:00	21:00	00:00Time (bin size = 10 minutes)(b)Fig. 4. Trafﬁc condition of one cell in Nanjing, on Dec. 1st, 2012. This cell is highlighted in Figure 2. (a) One day trafﬁc ﬂow. (b) One day trafﬁc speed, where each black dot is a record in the trajectory data, with y position representing speed value. The red line is a LOWESS smoothing of these speed values.3.2 Design ConsiderationsWe compare our cell-based sparse trajectory data with taxi GPS tra- jectory data. Their differences are summarized below:• Sparse in terms of location: In our data, vehicle movements are recorded only when they pass through one of the cells. The exact start/end locations and the tracks between two consecutive cells are uncertain. This spatial sparsity also results in temporal sparsity. In contrast, in taxi GPS trajectory data, movements are recorded in a quasi-continuous manner.• Dense in terms of population: In our data, vehicles are sampled very densely. It covers almost all vehicles running on the major roads of Nanjing. In contrast, GPS data are usually restricted to taxis, which are just a small subset of vehicles.• Accurate trafﬁc ﬂow volume: Because of the dense sampling in population, trafﬁc ﬂow volume can be calculated accurately. It is usually not possible with taxi GPS data.• Accurate trafﬁc speed: Trafﬁc speed can be estimated at high accuracy. In contrast, estimation based on taxi GPS data can be biased, because taxi drivers sometimes drive in low speed to search for passengers.• Suitable for network analysis: Network analysis can be per- formed more accurately, due to accurate estimations of ﬂow vol- ume and speed. However, this can be problematic with taxi GPS data.• Not suitable for vehicle tracking: Vehicles can not be tracked accurately all over the map, because their positions are only recorded at the cells. However, in taxi GPS data, vehicles can be tracked in high precision, with the help of map matching al- gorithms.  Although our data is sparse in terms of location and time, it still has much richer information than the OD data. When using OD data, only origin and destination location/time are known. It is impossible to get accurate trafﬁc ﬂow volume and speed information at each location, on each link and along each route. As a result, many network analysis tasks can not be performed. Vehicle tracking now becomes impossible, even locally.
ever, due to spatial and temporal sparsity, we can not accurately track the vehicles. In our data, vehicles move on the complex city road network. Their start/end locations, route selection and travel speed between consecutive cells are all unknown. A reasonable trajectory reconstruction is very difﬁcult. Therefore, we only reconstruct the movements in the vicinity of cells, where we believe the movements are of high certainty. Then we visualized such local tracking with local animation.  Following Andrienko et al.’s work [9], the second technique is to aggregate many trajectories, in order to compensate for the uncertain- ties in spatial and temporal coverage. In this way, we transform our data into ﬂow map, which is essentially a dynamic graph. Therefore, we can perform network analysis to study the macro-trafﬁc patterns.  According to Kelly’s formalization [23], trafﬁc ﬂow can be mod- eled mathematically, as illustrated on the left of Figure 5. There are several core concepts in this model: node, link, route and OD. In ourcase, each cell Ci is a node. If vehicle moves from cell C0 directly to cell C1, without passing any intermediate cells, then C0 → C1 formsa link. Each cell is connected to multiple links. Some are upstream links which end at this cell, while some are downstream links whichstart from this cell.  A series of links C0 → C1 → ... → CN  forms aroute. The start and end cells of a route forms an Origin Destination pair (abbrev. as OD), e.g. C0 ⇒ CN . Each route consists of a sequenceof links, and a link can be shared by multiple routes. Each route cor- responds to one OD, and for one OD there can be multiple routes.  Our network analysis consists of three steps, as shown on the right of Figure 5. Basically, users ﬁrst get an overview of the trafﬁc status at city scale. In this process, they ﬁnd some cells interesting, select them and examine their local trafﬁc patterns. Once they discover trafﬁc con- gestions or abnormalities on a speciﬁc cell, they can check whether they are correlated with ﬂow patterns on its upstream/downstream links or vehicles’ route selection. The three exploration steps are de- tailed below:• Global Exploration focuses on presenting an intuitive overview of the city trafﬁc. Users can check the trafﬁc status of all cells and the ﬂow volumes on major links at a speciﬁc time. Con- gested cells and backbone links can be discovered.• Cell Exploration focuses on revealing the trafﬁc patterns at each cell. Users can select one central cell each time. They check how its trafﬁc speed and ﬂow volume change with time, and try to discover trend and periodicity. Users can also see when trafﬁc congestions occur on the central cell, and when the trafﬁc status looks abnormal. Users can partly reproduce the trafﬁc scenario with local animation.• Correlation Exploration focuses on testing correlations be- tween cell patterns and link/route patterns. That corresponds to interesting domain questions such as how trafﬁc congestion on one cell is correlated with trafﬁc ﬂows on neighbouring links, and with route selection in its neighbourhood. Given a central cell, users ﬁrst select its major upstream/upstream links. Then they check which of these links have an increasing or decreasing ﬂow volume when the central cell starts getting congested. Al- ternatively, users can select a route passing by the central cell. Then users check whether the ﬂow volumes on this route and its alternative routes increase or decrease when the central cell starts getting congested. If correlation is detected, users can try to explain it by searching for news on the Internet.

Data Model
Exploration Model4 
PREPROCESSINGIn the preprocessing phase, we calculate the cell statistics data and link statistics data from raw sparse trajectory dataset. Before that, we ﬁrst cleaned the data, by removing records with undeﬁned cells or duplicated timestamps. In this step, 10% of the trajectory data are removed.  Then for each cell, we calculate its average speed, ﬂow volume, congestion status and abnormality at regular time intervals. In this paper, we set the time interval to be 10 minutes. Basically, the ﬂow volume can be calculated as the number of records passing the cell, while the average speed can be calculated by averaging the speeds in these records. However, in our data, some cells can be malfunc- tioned, and mistakenly record many moving vehicles with zero speed.
Fig. 5. Conceptual model of our network analysis: based on a formal network data model, we propose three exploration steps: global explo- ration, cell exploration and correlation exploration.3.3   PipelineOur system pipeline contains a preprocessing phase and a visual ex- ploration phase, as shown in Figure 6. In the preprocessing phase, we ﬁrst clean the data. Then we derive statistics data for cells and links. The cell statistics data records the trafﬁc ﬂow volume, average speed, congestion status and abnormality status of each cell at regular time intervals. The link statistics data records the ﬂow volume along each link at identical time intervals. The details of the preprocessing phase are presented in Section 4.  In the visual exploration phase, three kinds of explorations are sup- ported (see Section 3.2). For global exploration, we plot the cells and links as a node-link diagram on the map. For cell exploration, we use pixel tables to show the speed, trafﬁc ﬂow, congestion status as well as the abnormality status of a cell over days. We also pro- vide local animation view for each cell. For correlation exploration, we design route/link ﬁltering view, allowing users to select major up- stream/downstream links of and major routes passing by a central cell. Then we provide link/route ﬂow view, allowing users to visually cor- relate the temporal pattern of cell status with ﬂow volumes on selected links/routes. The details of visual interface are presented in Section 5.Fig. 6. Our system pipeline contains two phases: preprocessing and visual exploration. In the preprocessing phase, we calculate basic trafﬁc statistics. In the visual exploration phase, we allow users to perform three kinds of explorations with various visual designs.
Therefore, we remove all records with zero speed when calculating the average speed. If there’s no record with non-zero speed, then the average speed is unknown. Although this strategy can potentially re- move vehicle records in congestion, our domain experts consider it as acceptable.  The congestion status is a boolean value, indicating smooth trafﬁc or congestion. It is estimated from the average speed value, following Wang et al’s methods [42]. For each cell, we ﬁrst estimate the free ﬂow speed based on all average speed values for this cell. After that, we assume the cell is congested if the current speed is signiﬁcantly lower than the free ﬂow speed.  The abnormality is a ﬂoat value, indicating whether the cell behaves abnormally, in terms of its speed and ﬂow volume. We use an algo- rithm similar to the minDistort algorithm proposed by Liu et al [28]. That is, to calculate the abnormality, we would compute difference values between trafﬁc status at the current time and that at the same time of the same weekday in the same month. For each time, the traf- ﬁc status is represented as a ten dimensional vector. That is, the speed and ﬂow volume for ﬁve time intervals: the current time interval, two previous ones and two following ones. The difference value is calcu- lated as the Euclidean distance between these vectors. We deﬁne the minimum of these difference values as abnormality.  For each link, we calculate its ﬂow volume also at 10 minutes inter- vals. This is stored as series of matrices, each for 10 minutes.5 VISUAL  INTERFACEOur visual interface consists of ﬁve components: map view for global exploration, pixel table view and local animation view for cell explo- ration, then link/route ﬁltering view and link/route ﬂow view for cor- relation exploration.5.1 Map ViewMap view presents an intuitive overview of the city trafﬁc network, as shown in Figure 7. We follow the ﬂow map technique [2], visualizing cells as nodes, and inter-cell links as edges. The ﬂow map can be animated once users change the current time. This is equivalent to dynamic graph animation [18], with predeﬁned node positions.  For each cell, we encode the trafﬁc speed by color, where red repre-sents low speed and green for high speed. If the speed is unknown, we use white. The “)” sign inside the cell indicates its direction, for exam- ple, west to east. The number of “)” signs indicates the relative ﬂowvolume passing through this cell. Each link is represented as a gray line connecting two cells, with saturation indicating direction: high saturation (black) end starts the link. The width of the link is propor- tional to its ﬂow volume. To avoid visual clutter, users can ﬁlter out links with low ﬂow volumes, therefore keeping only the major links.5.2 Pixel Table ViewPixel table view shows the temporal patterns of one cell. As shown in Figure 8(a), it includes three kinds of tables: trafﬁc speed table, ﬂow volume table and abnormality table. Take the speed table for example. It shows the average trafﬁc speed at one cell in Dec. 2012. Each row of the table represents one day, and each column represents 10 minutes of a day. The speed is encoded as a pixel in red-yellow-green color scale, located at respective row and column. If the speed is unknown, we use gray. Once the trafﬁc is congested, we make the pixel larger.

Fig. 7. Map view: overview of city trafﬁc network, visualizing cells as nodes, and inter-cell links as edges. To avoid visual clutter, only links with 10-minutes ﬂow volumes above 100 are shown.This table like design helps summarize daily trafﬁc pattern, and has proven effective in Wang et al.’s work [42]. In our system, we allow users to switch on/off each of the three tables. We further allow users to make periodic ﬁltering. For example, in Figure 8(b), we only show the trafﬁc status during the daytime of weekends.5.3 Local Animation ViewIn addition to pixel tables, we also design local animation view for cell exploration. We believe an intuitive animation will be important in giving users a ﬁrst impression of the data. It can also help vali- date discoveries made by statistic or data mining methods, as shown in Wang et al.’s work [42]. However, as mentioned in Section 3.2, tra- ditional animation is not applicable due to the uncertainties caused by sparsity. Therefore, we only reconstruct the trafﬁc within 200 meter interval downstream of each cell. In the reconstruction, we assume that the vehicles move with constant speed and never change lanes. Then we are able to show a local animation, as in Figure 8(c). In the local animation view, we draw black lines to separate the lanes, and dots to show the vehicles. The dot color represents the speed of vehicle.(b)	(c)Fig. 8. (a) Pixel table view shows the temporal patterns of one cell, including trafﬁc speed, ﬂow volume, abnormality and congestion status in Dec. 2012. (b) Pixel table supports periodic ﬁltering. This table shows the trafﬁc status during the daytime of weekends. (c) Local animation view shows the trafﬁc animation at one cell.5.4 
Link/Route Filtering ViewGiven a central cell, the ﬁrst step of correlation exploration is to select its related links/routes. This is supported by link/route ﬁltering view.  Link ﬁltering view supports the selection of most related up- stream/downstream links, as shown in Figure 9(a). It consists of two histograms. Given the central cell, the left histogram displays the top ten highest ﬂow volumes of its upstream links, while the right his- togram is for downstream links. Users can select links directly on these histograms, for example, the top three upstream links and top ﬁve downstream links. Selected links are highlighted on the map, with their width proportional to the ﬂow volumes at the current time. We can color these links in gray, identical to that in the map view. How- ever, in order to show whether the ﬂow volume is increasing or de- creasing, now we prefer to color them in a yellow-gray-blue color scale, as shown in Figure 10. Yellow indicates decreasing ﬂow vol- umes, while blue indicates increasing ﬂow volumes. Again, saturation indicates direction, with high saturation end starting the link.  Route ﬁltering view supports the selection of related routes. That includes one central route R passing the central cell, and route R’s multiple alternative routes. For simpliﬁcation, in our system we only consider routes consisting of three cells. So the central route R is inthe form Cstart → Ccentral → Cend , where Ccentral is the central cell.Cstart and Cend are the start and end cells of the route. The alterna- tive routes of R share the same OD Cstart ⇒ Cend  with R.  However,they bypass the central cell, so each alternative route is in the formCstart → Calternative → Cend , where Calternative is a cell different fromthe central cell Ccentral . Our system ﬁrst tries to recommend the central route R. As shown in Figure 9(b), our system would choose the top ten routes passing the central cell with highest ﬂow volumes. These ten routes are arranged vertically and aligned horizontally. For each route, we have three circles. From left to right, they represent the start cell, central cell and end cell. The cell color indicates its trafﬁc speed at the current time. Two lines connecting the circles represent links between cells. The width of the line is proportional to the ﬂow volume on routeR. Each line also has a gray background, whose width is proportional to the total ﬂow volume on the link. This gives some contextual infor- mation. As we consider routes with high ﬂow volumes more relevant to the central cell, we suggest users to choose route R with thick black lines, which are arranged on top. Once users select route R, its top ten alternative routes with highest ﬂow volumes will be automatically selected. On the map, the central route R will be highlighted, with an “S” sign besides the start cell, and an “E” sign besides the end cell. However, the alternative routes will not be highlighted automatically. Users can highlight them manually on the route ﬂow view, which will be mentioned later.	(a) (b)Fig. 9. (a) Link ﬁltering view supports the selection of major up- stream/downstream links of the central cell. These links will be used for cell-link correlation discovery. (a) Route ﬁltering view supports the selection of one route passing the central cell, and its alternative routes. These routes will be used for cell-route correlation discovery.

5.5 Link/Route Flow ViewAfter ﬁltering the related links and routes, users try to discover the correlation between cell status pattern and link/route pattern. That is supported by link/route ﬂow view.  With link ﬂow view, we compare ﬂow volumes on links, and cor- relate them with trafﬁc status on the central cell. This would be a dynamic graph exploration task. Among various visualization tech- niques for dynamic graph, we think Flowstrates [13] will be a good starting point for our design. It is a time line based method specially designed to compare temporal patterns on links. As shown in Fig- ure 10, the link ﬂow view has a horizontal time axis. In the middle of this view, it’s the link region, showing the ﬂow volumes of four links on four rows. Their names are labelled on the left, in Chinese charac- ter. At each time interval, the ﬂow volume of each link is represented as a rectangle. Instead of purely using color encodings in Flowstrates, we use both color and width of rectangle. This is because we want to show two properties simultaneously. We use the width of rectangle to encode the magnitude of ﬂow volume, and color to encode its increas- ing/decreasing rate. The color scale is yellow-gray-blue, identical to that used in the link/route ﬁltering view: yellow for decreasing and blue for increasing. The upstream links are drawn at the lower half of the link region, while the downstream links at the upper half. Then the upstream links and downstream links are ordered by total ﬂow volume separately. On top of the link region is the cell speed band, where we show the speed pattern of the central cell. Below the link region is the cell ﬂow band, where we show the ﬂow volume pattern of the central cell. At some time interval, the band appears larger than usual. That indicates trafﬁc congestion. These two bands are aligned with the link region, enabling visual correlation of cell status pattern and link ﬂow patterns.  The route ﬂow view reuses the above design, but shows cell-route correlation instead of cell-link correlation. The only difference in our design is that now the central link region becomes the route region, where each row represents one route. One of these routes will be the central route R. It passes through the central cell. Others are the al- ternative routes of R. These routes are vertically ordered by total ﬂow volume.Cell Speed BandLink Region
A and C, A and D, in both directions. Position B is on the intersection of two highways, and Position C is the commercial center of Nanjing. Position D is a high-tech enterprise zone. We postulate that the ODsA ⇔ B are for trafﬁc entering and leaving Nanjing. ODs A ⇔ C andA ⇔ D are on the inner express way of Nanjing, connecting differentfunctional regions in the city.Fig. 11. Case 1: City level trafﬁc network conditions at different times on Dec. 1st, 2012. Links with 10-minute ﬂow volume larger than 50 are shown.6.2   Case 2: Cell Trafﬁc Event Exploration
Name of Link
Cell Flow Band
Fig. 10. Link ﬂow view supports visual comparison among ﬂow patterns on upstream/downstream links of a central cell, and visual correlation between those ﬂow patterns and trafﬁc status on the central cell.
6 CASE  STUDIESIn this section, we present four studies, demonstrating the three kinds of explorations supported by our system. The ﬁrst case is for global exploration, the second for cell exploration, while the last two cases are for correlation exploration.6.1 Case 1: City Trafﬁc Network ExplorationIn this case, we study the city level trafﬁc condition. We choose four typical times on Dec. 1st, 2012, and compare the network patterns at those times. In Figure 11, we can see that the trafﬁc during morning peak and evening peak are very different. At 8 am in the morning, the trafﬁc is relatively smooth at all cells. There are many high ﬂow volume links, indicating the trafﬁc load is high. However, at 6 pm in the evening, the trafﬁc is rather congested at all cells. At the mean time, there are much fewer high ﬂow volume links. It perhaps indicates that trafﬁc ﬂow drops due to congestions during the evening peak.  From the ﬁgures, we can clearly see the backbone of Nanjing’s traf- ﬁc. Position A seems to be the most important hub. It is the railway station in Nanjing. Major trafﬁc routes in the city are between A and B,
Fig. 12. Case 2: Cell trafﬁc event exploration at the high-tech enterprise zone.  In this case, we explore the cell trafﬁc events. We look at position D, the high-tech enterprise zone, as shown in Figure 12. We select the four cells at the downstream of a road intersection. We can see from the pixel tables, that the two cells on the north have some speed values unknown. That is indicated by the continuous gray color. The northeast and southwest cells have more lanes, and the trafﬁc is usu- ally smooth. However, the northwest and southeast cells have only two lanes, and are congested frequently. The congestions have clear periodic patterns. Take the southeast cell for example. On weekdays, it mainly congested during the morning peak, from 7:30 am to 8:30 am. On weekends, it mainly congested in the afternoon and evening, from 1:30 pm to 3:30 pm, and from 5:30 pm to 6:30 pm.
	(a) (b)(c)(d)Fig. 13. Case 3: Correlation studies between the congestions on one cell, and ﬂow volumes on its upstream/downstream links. When cell (a) is congested, ﬂow volumes on its major upstream/downstream links drop signiﬁcantly (c). When cell (b) is congested, ﬂow volumes on some of its major upstream/downstream links increase signiﬁcantly (d).
6.3 Case 3: Correlating Congestions with Link FlowIn this case, we study the correlations between the congestions on one cell, and ﬂow volumes on its upstream/downstream links. By common sense, people would expect that ﬂow volumes on these links change during congestion. Now we are able to study whether it is the case. We have checked many cells. For most of them, the trafﬁc ﬂows drop signiﬁcantly. For example, in Figure 13(a), we select one cell. We can see from the pixel tables that it usually gets congested during the evening peaks. Therefore, we continue to select a time range from 2 pm to 9 pm, on Dec. 1st, 2012. Then from the histograms of link ﬁltering view, we can see that it only has one major upstream link and three major downstream links. We select these links, and generate the link ﬂow view, as shown in Figure 13(c). From the cell speed band on top, we can see that the cell is congested from 4:20 pm to 7:20 pm. In the central link region, there are the four links. The bottom row is for the only upstream link, while the top three rows are for downstream links. We can see that the ﬂow volumes drop considerably during congestion, as indicated by the emptiness in the link region. Besides, we can also see that the bottom link has a much larger ﬂow volume than other links. The name of this link is highlighted in red in the link ﬂow view, while the link itself is highlighted in black on the map.  However, for a few cells, the ﬂow volumes on their up- stream/downstream links would increase during congestion. In Fig- ure 13(b), we select such a cell, and choose a time range from 3:30 pm to 7:30 pm, on Dec. 1st, 2012. From the right histogram of link ﬁltering view, we can see that the ﬂow volume distribution on its down- stream links is rather ﬂat. In the end, we select three upstream links and eight downstream links, and generate the link ﬂow view in Fig- ure 13(d). From the cell speed band on top, we can see that the cell is congested from 5:20 pm to 6:20 pm. In the central link region, the bottom three rows are for upstream links, while the top eight rows are for downstream links. We can see that the upstream link on the very bottom has the largest ﬂow volume among all links. Before conges- tion, its ﬂow volume continues to increase, indicated by blue color. However, during congestion, its ﬂow volume continues to decrease, indicated by yellow color. In contrast, the sixth row counting from bottom has much larger ﬂow volumes during congestion.  The name
of this link is highlighted in red in the link ﬂow view, while the link itself is highlighted in black on the map. Besides, the eighth row also has larger ﬂow volumes during congestion. These two links are both downstream links and correspond to vehicles turning around. It may indicate that some events happened there, where many vehicles previ- ously parking nearby were leaving. We searches on the Internet, and ﬁnd this cell to be on the north of Nanjing Olympic Center. On Dec. 1st, an exhibition ended there just at 5 pm, then a concert started at 6 pm. It is conceivable that there could be high trafﬁc load.6.4 Case 4: Correlating Congestions with Route SelectionIn this case, we study the correlation between the congestions on one cell, and vehicles’ route selection in its neighbourhood. As shown in Figure 14(b), we select the cell in the middle of the map. Then this cell get an additional circle around it on the map. We choose a time range from 5 am to 11 am, on Dec. 1st, 2012. As shown in Figure 14(a), our system recommends ten central routes, and we select the fourth route. This central route is shown by the black lines in Figure 14(b), where the start cell and end cell are highlighted with a “S” sign and a “E” sign respectively. Its ﬁve alternative routes are automatically selected by our system, which share the start and end cell. Their ﬂow dynamics together with the central route’s dynamics are shown in the route ﬂow view in Figure 14(e). From the Figure, we can see that there are three major routes, on the top three rows. From top to bottom, the ﬁrst route is shown in Figure 14(d), the second in Figure 14(c). The third route with red label is the central route in Figure 14(b). We can see that the ﬂow volume on the central route is exceptionally large during congestion. However, when the trafﬁc is smooth, this route is seldom travelled. It seems that in this case, vehicles do not avoid the congested central cell. It is more likely that it’s the high ﬂow volume in the central route that causes the congestion. Unfortunately, we can not conﬁrm this discovery.7 DISCUSSIONIn this paper, we have studied a new kind of transportation data, namely sparse trafﬁc trajectory data. Such data contains almost all vehicles on the major roads of Nanjing.  Therefore it gives accurate
			(a)	(b)	(c)	(d)(e)Fig. 14. Case 4: Correlation studies between the congestions on one central cell and vehicles’ route selection in its neighbourhood. (a) Route ﬁltering view recommends ten central routes passing the central cell. (b) The central routes, which passes the central cell. (c,d) Two alternative routes bypassing the central cell. (e) Route ﬂow view helps compare route ﬂows and correlate them with the trafﬁc status on the central cell.
trafﬁc statistics and is very precious for macro-trafﬁc analysis. We analyse such data from the angle of network analysis. We have studied the global network patterns, cell patterns and correlation patterns. The value of such patterns and the effectiveness of our system in analysing such patterns have been demonstrated in the case studies. Our domain experts conﬁrm that: “This system is nicely designed according to the characteristics of our data. It has produced many useful analysis re- sults.”  Performing network analysis on our data is a natural choice, be- cause city trafﬁc is a network-constrained movement. Andrienko et al.’s ﬂow map [2] can be already seen as a dynamic graph. While they address the patterns on node/link separately, we further study the correlations between them. Such correlation explorations are impor- tant to answer many interesting domain questions, and we study them explicitly with dynamic graph visualization techniques. Our domain experts consider correlation exploration as very valuable. They com- ments that: “The correlation exploration analyses our data from a new perspective.”  From the research perspective, our system is limited in several as- pects. First of all, it does not support all major network analysis tasks systematically. Currently there’s no separate link exploration, route exploration and OD exploration. Secondly, it focuses on visualization methods, and lacks sufﬁcient support for automatic analysis. In many cases, we have to scan the data manually to discover patterns. It is like ﬁnding a needle in a haystack. It would be much more powerful if we have automatic algorithms to search for patterns and visualization methods to validate and explain them. Besides, in the cell-route corre- lation exploration, we constrain that the central route and its alternative routes have three cells. This is not realistic, because most re-routings would relate to more than three cells. However, if we consider longer routes, we would need more complicated strategies for central route recommendation. A mere ﬂow volume comparison may not work, be- cause longer routes will systematically have less ﬂow volume.  From the application perspective, our system has some other limi- tations. First of all, our domain experts ﬁnd the direct manipulations in our system too fancy. One of them said: “I can see that direct selec-
tions on pixel tables and histograms are very advanced interactions, but we are more comfortable with standard menus and dialogues.” We consider it as a general issue in user preference. Besides, they ﬁnd the link/route ﬂow view not intuitive, even after we have greatly simpliﬁed the visual design in the current version of our system. One of our domain experts said: “Although I can understand it, my boss can’t.” We consider it as a general problem for time line based dy- namic graph visualization techniques, which focus on analysis but are less intuitive. Finally, our domain experts hope that the system can support their daily workﬂow, and directly address speciﬁc application questions. For example, they would like it if our system can show how the trafﬁc changes if trucks are not allowed to pass through the city center. They also wish our system can discover illegal taxi operations. Currently our system is mainly exploratory. It is not able to answer such speciﬁc questions.8 CONCLUSIONIn this paper, we have presented a visual analysis system to explore a special kind of transportation data, i.e. sparse trafﬁc trajectory data. We use local animation and aggregation techniques to deal with the uncertainties in such data. After trajectory aggregation, we are able to study the macro trafﬁc patterns from the angle of network analysis, and perform three steps of explorations. We starts from the city scale network status, then drill down to each cell. Finally, we choose some congested cells, and study the correlation between patterns on these cells and the trafﬁc ﬂows on related links and routes. For each of the exploration tasks, we produce real case studies with our system.ACKNOWLEDGMENTSThe authors wish to thank the anomynous reviewers for their valu- able comments. This work is supported by NSFC No. 61170204 and HKUST grant No. SRFI11EG15PG. This work is also partially sup- ported by NSFC Key Project No. 61232012.

REFERENCES[1] J.-w. Ahn, C. Plaisant, and B. Shneiderman. A task taxonomy for network evolution analysis. IEEE Trans. Vis. Comput. Graph., 20(3):365–376, 2014.[2] G. Andrienko and N. Andrienko. Spatio-temporal aggregation for visual analysis of movements. In Proc. IEEE VAST, pages 51–58, 2008.[3] G. Andrienko, N. Andrienko, P. Bak, D. Keim, and S. Wrobel. Visual Analytics of Movement. Springer, 2013.[4] G. Andrienko, N. Andrienko, J. Dykes, S. I. Fabrikant, and M. Wachow- icz. Geovisualization of dynamics, movement and change: key issues and developing approaches in visualization research. Information Visualiza- tion, 7(3):173–180, 2008.[5] G. Andrienko, N. Andrienko, C. Hurter, S. Rinzivillo, and S. Wrobel. From movement tracks through events to places: Extracting and charac- terizing signiﬁcant places from mobility data. In Proc. IEEE VAST, pages 161– 170, 2011.[6]  G. Andrienko, N. Andrienko, S. Rinzivillo, M. Nanni, D. Pedreschi, andF. Giannotti. Interactive visual clustering of large collections of trajecto- ries. In Proc. IEEE VAST, pages 3–10, 2009.[7] N. Andrienko and G. Andrienko. Spatial generalization and aggregation of massive movement data. IEEE Trans. Vis. Comput. Graph., 17(2):205– 219, 2011.[8] N. Andrienko, G. Andrienko, L. Barrett, M. Dostie, and P. Henzi. Space transformation for understanding group movement. IEEE Trans. Vis. Comput. Graph., 19(12):2169–2178, 2013.[9] N. Andrienko, G. Andrienko, H. Stange, T. Liebig, and D. Hecker. Vi- sual analytics for understanding spatial situations from episodic move- ment data. Knstliche Intelligenz, 26(3):241–251, 2012.[10] B. Bach, E. Pietriga, and J.-D. Fekete. Visualizing dynamic networks with matrix cubes. In Proc. ACM SIGCHI, pages 877–886, 2014.[11] P. Bak, F. Mansmann, H. Janetzko, and D. A. Keim. Spatiotemporal analysis of sensor logs using growth ring maps. IEEE Trans. Vis. Comput. Graph., 15(6):913–920, 2009.[12] F. Beck, M. Burch, S. Diehl, and D. Weiskopf. The state of the art in visualizing dynamic graphs. In Proc. EuroVis STAR, 2014.[13] I. Boyandin, E. Bertini, P. Bak, and D. Lalanne. Flowstrates: An ap- proach for visual exploration of temporal origin-destination data. Com- put. Graph. Forum, 30(3):971–980, 2011.[14] M. Burch, F. Beck, M. Raschke, T. Blascheck, and D. Weiskopf. A dy- namic graph visualization perspective on eye movement data. In Proc. Eye Tracking Research and Applications, pages 151–158, 2014.[15] M. Burch, C. Vehlow, F. Beck, S. Diehl, and D. Weiskopf. Parallel edge splatting for scalable dynamic graph visualization. IEEE Trans. Vis. Com- put. Graph., 17(12):2344–2353, 2011.[16] S. Chawla, Y. Zheng, and J. Hu. Inferring the root cause in road traf- ﬁc anomalies. In Proc. IEEE International Conference on Data Mining, pages 141–150, 2012.[17] D. Chu, D. A. Sheets, Y. Zhao, Y. Wu, J. Yang, M. Zheng, and G. Chen. Visualizing hidden themes of trajectories with semantic transformation. In Proc. IEEE PaciﬁcVis, pages 137–144, 2014.[18] K.-C. Feng, C. Wang, H.-W. Shen, and T.-Y. Lee. Coherent time-varying graph drawing with multifocus+context interaction. IEEE Trans. Vis. Comput. Graph., 18(8):1330–1342, 2012.[19] N. Ferreira, J. T. Klosowski, C. E. Scheidegger, and C. T. Silva. Vec- tor ﬁeld k-means: Clustering trajectories by ﬁtting multiple vector ﬁelds. Comput. Graph. Forum, 32(3):201–210, 2013.[20] N. Ferreira, J. Poco, H. T. Vo, J. Freire, and C. T. Silva. Visual exploration of big spatio-temporal urban data: A study of new york city taxi trips. IEEE Trans. Vis. Comput. Graph., 19(12):2149–2158, 2013.[21] H. Guo, Z. Wang, B. Yu, H. Zhao, and X. Yuan. Tripvista: Triple perspec- tive visual trajectory analytics and its application on microscopic trafﬁc data at a road intersection. In Proc. IEEE PaciﬁcVis, pages 163–170, 2011.[22]  T. Kapler and W. Wright.  Geotime information visualization.  In Proc.IEEE InfoVis, pages 25–32, 2004.[23] F. Kelly. The Princeton Companion to Mathematics, chapter The Math- ematics of Trafﬁc in Networks, pages 862–870. Princeton University Press, 2008.[24] C. G. Kolaczyk, Eric D. Statistical Analysis of Network Data with R. Springer, 2014.[25] R. Krueger, D. Thom, and T. Ertl. Visual analysis of movement behavior using web data for context enrichment. In Proc. IEEE PaciﬁcVis, pages
193–200, 2014.[26] H. Liu, Y. Gao, L. Lu, S. Liu, H. Qu, and L. M. Ni. Visual analysis of route diversity. In Proc. IEEE VAST, pages 171–180, 2011.[27] S. Liu, J. Pu, Q. Luo, H. Qu, L. Ni, and R. Krishnan. Vait: A visual analytics system for metropolitan transportation. IEEE Transactions on Intelligent Transportation Systems, 14(4):1586–1596, 2013.[28] W. Liu, Y. Zheng, S. Chawla, J. Yuan, and X. Xing. Discovering spatio-temporal causal interactions in trafﬁc data streams. In Proc. ACM SIGKDD, pages 1010–1018, 2011.[29] C.-T. Lu, A. P. Boedihardjo, J. Dai, and F. Chen. Homes: highway opera- tion monitoring and evaluation system. In Proc. ACM SIGSPATIAL GIS, pages 85:1–85:2, 2008.[30] P. Lundblad, O. Eurenius, and T. Heldring. Interactive visualization of weather and ship data. In Proc. International Conference Information Visualisation, pages 379–386, 2009.[31]  OpenDataCity.	Visitor ﬂow analysis by public wireless. http://apps.opendatacity.de/relog/, 2013.[32] L. X. Pang, S. Chawla, W. Liu, and Y. Zheng. On detection of emerging anomalous trafﬁc patterns using gps data. Data & Knowledge Engineer- ing, 87:357–373, 2013.[33] H. Piringer, M. Buchetics, and R. Benedik.  Alvis: Situation awareness in the surveillance of road tunnels. In Proc. IEEE VAST, pages 153–162, 2012.[34] P. Saraiya, P. Lee, and C. North. Visualization of graphs with associated timeseries data. In Proc. IEEE InfoVis, pages 225–232, 2005.[35] R. Scheepens, H. van de Wetering, and J. J. van Wijk. Non-overlapping aggregated multivariate glyphs for moving objects. In Proc. IEEE Paci- ﬁcVis, pages 17–24, 2014.[36] L. Shi, Q. Liao, Y. He, R. Li, A. Striegel, and Z. Su. Save: Sensor anomaly visualization engine. In Proc. IEEE VAST, pages 201–210, 2011.[37] M. Stoll, R. Kruger, T. Ertl, and A. Bruhn. Racecar tracking and its visualization using sparse data. In Proc. Workshop on Sports Data Visu- alization, 2013.[38] G. Sun, Y. Liu, W. Wu, R. Liang, and H. Qu. Embedding temporal display into maps for occlusion-free visualization of spatio-temporal data. In Proc. IEEE PaciﬁcVis, pages 185–192, 2014.[39] A. Thudt, D. Baur, and S. Carpendale. Visits: A spatiotemporal visual- ization of location histories. In Proc. EuroVis (Short Papers), 2013.[40] C. Tominski, H. Schumann, G. Andrienko, and N. Andrienko. Stacking- based visualization of trajectory attribute data. IEEE Trans. Vis. Comput. Graph., 18(12):2565–2574, 2012.[41] S. van den Elzen, D. Holten, J. Blaas, and J. J. van Wijk. Reordering massive sequence views: Enabling temporal and structural analysis of dynamic networks. In Proc. IEEE PaciﬁcVis, pages 33–40, 2013.[42] Z. Wang, M. Lu, X. Yuan, J. Zhang, and H. van de Wetering. Visual trafﬁc jam analysis based on trajectory data. IEEE Trans. Vis. Comput. Graph., 19(12):2159–2168, 2013.[43] N. Willems, H. van de Wetering, and J. J. van Wijk. Visualization of vessel movements. Comput. Graph. Forum, 28(3):959–966, 2009.[44] J. Wood, J. Dykes, and A. Slingsby. Visualization of origins, destina- tions and ﬂows with od maps. The Cartographic Journal, 47(2):117–129, 2010.[45] W. Zeng, C.-W. Fu, S. M. Arisona, and H. Qu. Visualizing interchange patterns in massive movement data. Comput. Graph. Forum, 32(3):271– 280, 2013.[46]  Y. Zheng and X. Zhou, editors.   Computing with spatial trajectories.Springer, 2011.